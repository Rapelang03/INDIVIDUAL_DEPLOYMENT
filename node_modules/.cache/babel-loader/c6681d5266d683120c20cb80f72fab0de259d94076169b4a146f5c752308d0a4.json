{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Music\\\\my-app\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend } from 'recharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [products, setProducts] = useState([]); // Initialize products state\n  const [error, setError] = useState(null); // Initialize error state for error handling\n\n  const totalProducts = products.length;\n  const totalStock = products.reduce((sum, product) => sum + product.quantity, 0);\n  const styles = {\n    container: {\n      padding: '2rem',\n      backgroundColor: '#f5f5f5',\n      color: '#333',\n      borderRadius: '8px',\n      boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)',\n      maxWidth: '800px',\n      margin: '2rem auto',\n      textAlign: 'center'\n    },\n    table: {\n      width: '100%',\n      marginTop: '1.5rem',\n      borderCollapse: 'collapse'\n    },\n    header: {\n      backgroundColor: '#4CAF50',\n      color: '#fff',\n      padding: '0.8rem'\n    },\n    cell: isAltRow => ({\n      padding: '0.8rem',\n      textAlign: 'center',\n      backgroundColor: isAltRow ? '#e8f5e9' : '#f9f9f9'\n    }),\n    chartContainer: {\n      marginTop: '2rem',\n      display: 'flex',\n      justifyContent: 'center'\n    }\n  };\n\n  // Prepare data for the chart\n  const chartData = products.map(product => ({\n    name: product.name,\n    quantity: product.quantity\n  }));\n  useEffect(() => {\n    const fetchProducts = async () => {\n      try {\n        const response = await axios.get('http://localhost:5001/api/products');\n        setProducts(response.data);\n      } catch (error) {\n        console.error('Error fetching products:', error);\n        setError('Failed to load products. Please try again later.');\n      }\n    };\n    fetchProducts();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '1rem'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Total Products: \", totalProducts, \" | Total Stock: \", totalStock]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Stock Overview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      style: styles.table,\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.header,\n            children: \"Product\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.header,\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            style: styles.header,\n            children: \"Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: products.map((product, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          style: styles.cell(index % 2 === 0),\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: product.quantity\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)]\n        }, product.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.chartContainer,\n      children: /*#__PURE__*/_jsxDEV(BarChart, {\n        width: 600,\n        height: 300,\n        data: chartData,\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          strokeDasharray: \"3 3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"quantity\",\n          fill: \"#4CAF50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Dashboard, \"7hZFy6kTR4lT3S2Ir1EL/hXACPw=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","BarChart","Bar","XAxis","YAxis","Tooltip","CartesianGrid","Legend","jsxDEV","_jsxDEV","Dashboard","_s","products","setProducts","error","setError","totalProducts","length","totalStock","reduce","sum","product","quantity","styles","container","padding","backgroundColor","color","borderRadius","boxShadow","maxWidth","margin","textAlign","table","width","marginTop","borderCollapse","header","cell","isAltRow","chartContainer","display","justifyContent","chartData","map","name","fetchProducts","response","get","data","console","style","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","index","category","id","height","strokeDasharray","dataKey","fill","_c","$RefreshReg$"],"sources":["C:/Users/hp/Music/my-app/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { BarChart, Bar, XAxis, YAxis, Tooltip, CartesianGrid, Legend } from 'recharts';\r\n\r\nconst Dashboard = () => {\r\n    const [products, setProducts] = useState([]); // Initialize products state\r\n    const [error, setError] = useState(null); // Initialize error state for error handling\r\n\r\n    const totalProducts = products.length;\r\n    const totalStock = products.reduce((sum, product) => sum + product.quantity, 0);\r\n\r\n    const styles = {\r\n        container: {\r\n            padding: '2rem', backgroundColor: '#f5f5f5', color: '#333', borderRadius: '8px',\r\n            boxShadow: '0 4px 12px rgba(0, 0, 0, 0.15)', maxWidth: '800px', margin: '2rem auto', textAlign: 'center'\r\n        },\r\n        table: {\r\n            width: '100%', marginTop: '1.5rem', borderCollapse: 'collapse'\r\n        },\r\n        header: {\r\n            backgroundColor: '#4CAF50', color: '#fff', padding: '0.8rem'\r\n        },\r\n        cell: (isAltRow) => ({\r\n            padding: '0.8rem', textAlign: 'center', backgroundColor: isAltRow ? '#e8f5e9' : '#f9f9f9'\r\n        }),\r\n        chartContainer: {\r\n            marginTop: '2rem',\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n        }\r\n    };\r\n\r\n    // Prepare data for the chart\r\n    const chartData = products.map(product => ({\r\n        name: product.name,\r\n        quantity: product.quantity\r\n    }));\r\n\r\n    useEffect(() => {\r\n        const fetchProducts = async () => {\r\n            try {\r\n                const response = await axios.get('http://localhost:5001/api/products');\r\n                setProducts(response.data);\r\n            } catch (error) {\r\n                console.error('Error fetching products:', error);\r\n                setError('Failed to load products. Please try again later.');\r\n            }\r\n        };\r\n        fetchProducts();\r\n    }, []);\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <h1>Dashboard</h1>\r\n            {error && <div style={{ color: 'red', marginBottom: '1rem' }}>{error}</div>}\r\n            <div>Total Products: {totalProducts} | Total Stock: {totalStock}</div>\r\n\r\n            <h2>Stock Overview</h2>\r\n            <table style={styles.table}>\r\n                <thead>\r\n                    <tr>\r\n                        <th style={styles.header}>Product</th>\r\n                        <th style={styles.header}>Category</th>\r\n                        <th style={styles.header}>Stock</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {products.map((product, index) => (\r\n                        <tr key={product.id} style={styles.cell(index % 2 === 0)}>\r\n                            <td>{product.name}</td>\r\n                            <td>{product.category}</td>\r\n                            <td>{product.quantity}</td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n\r\n            {/* Chart Section */}\r\n            <div style={styles.chartContainer}>\r\n                <BarChart width={600} height={300} data={chartData}>\r\n                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                    <XAxis dataKey=\"name\" />\r\n                    <YAxis />\r\n                    <Tooltip />\r\n                    <Legend />\r\n                    <Bar dataKey=\"quantity\" fill=\"#4CAF50\" />\r\n                </BarChart>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}